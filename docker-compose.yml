version: "1.1"
services:
  rabbitmq:
    image: rabbitmq:3.13.1-management
    hostname: rabbitmq
    restart: always
    env_file:
      - rabbitmq/.env
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    ports:
      - 15672:15672
      - 5672:5672
    networks:
      - local_network

  db:
    image: postgres:16-alpine
    volumes:
      - ./postgres_data:/var/lib/postgresql/data/
    depends_on:
      - rabbitmq
    expose:
      - 5432
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=stateykin
    networks:
      - local_network

  app:
    build:
      context: ./app/
      dockerfile: Dockerfile
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    image: event-planner-api:latest
    ports:
      - "8000:8000"
    restart: always
    env_file:
      - ./app/.env
    volumes:
      - ./app:/app
    depends_on:
      - db
      - worker
    networks:
      - local_network

  bot:
    build:
      context: ./bot/
      dockerfile: Dockerfile
    command: python main.py
    restart: always
    env_file:
      - ./bot/.env
    volumes:
      - ./bot:/bot
    depends_on:
      - app
    networks:
      - local_network

  worker:
    build: ./worker/
    deploy:
      resources:
        reservations:
          memory: 11500M
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
    restart: always
    env_file:
      - worker/.env
    volumes:
      - ./worker:/worker
    depends_on:
      - rabbitmq
    expose:
      - 11434
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - local_network

networks:
  local_network:
    driver: bridge
